plugins {
    id 'java'
    id 'application'
    id 'antlr'
    id 'org.jetbrains.kotlin.jvm' version '1.4.21-2'
    id 'com.github.johnrengelman.shadow' version '5.2.0' // '6.1.0'
}

group 'org.example'
version '1.0-SNAPSHOT'

mainClassName = 'com.virtlink.gocolonize.MainKt'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "com.github.ajalt:clikt:2.8.0"
    antlr          "org.antlr:antlr4:4.9"

    compileOnly    "com.google.code.findbugs:jsr305:3.0.2"

    testCompile    "org.junit.jupiter:junit-jupiter:5.7.0"
}

compileKotlin {
    dependsOn generateGrammarSource
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    dependsOn generateTestGrammarSource
    kotlinOptions.jvmTarget = "1.8"
}
test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
            'Main-Class': mainClassName
        )
    }
}
shadowJar {
    minimize()
    classifier = ''
    archiveVersion = ''
}
generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ["-visitor", "-long-messages", "-package", "com.virtlink.gocolonize.parser"]
    outputDirectory = file("${project.buildDir}/generated-src/antlr/main/com/virtlink/gocolonize/parser")
}
sourceSets {
    main.java.srcDirs += file("${project.buildDir}/generated-src/antlr/main")
}